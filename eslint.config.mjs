import ts from "typescript-eslint";
import style from "@stylistic/eslint-plugin";
import globals from "globals";

const jsRules = {
  "accessor-pairs": "error",
  "array-callback-return": "error",
  "arrow-body-style": "error",
  "block-scoped-var": "error",
  "camelcase": "error",
  "capitalized-comments": "off",
  "class-methods-use-this": "warn",
  "complexity": "off",
  "consistent-return": "off",
  "consistent-this": "off",
  "constructor-super": "error",
  "curly": "error",
  "default-case": "off",
  "default-case-last": "error",
  "default-param-last": "error",
  "dot-notation": "off",
  "eqeqeq": ["error", "always", {"null": "ignore"}],
  "for-direction": "error",
  "func-name-matching": ["error", { "considerPropertyDescriptor": true }],
  "func-names": "error",
  "func-style": ["error", "declaration", { "allowArrowFunctions": true }],
  "getter-return": "error",
  "grouped-accessor-pairs": ["error", "setBeforeGet"],
  "guard-for-in": "error",
  "id-denylist": "off",
  "id-length": "off",
  "id-match": "off",
  "init-declarations": "off",
  "logical-assignment-operators": "error",
  "max-classes-per-file": "off",
  "max-depth": "off",
  "max-lines": "off",
  "max-lines-per-function": "off",
  "max-nested-callbacks": "off",
  "max-params": "off",
  "max-statements": "off",
  "new-cap": "error",
  "no-alert": "error",
  "no-array-constructor": "error",
  "no-async-promise-executor": "error",
  "no-await-in-loop": "warn",
  "no-bitwise": "warn",
  "no-caller": "error",
  "no-case-declarations": "error",
  "no-class-assign": "error",
  "no-compare-neg-zero": "error",
  "no-cond-assign": "error",
  "no-console": "off",
  "no-const-assign": "error",
  "no-constant-binary-expression": "error",
  "no-constant-condition": "error",
  "no-constructor-return": "error",
  "no-continue": "error",
  "no-control-regex": "error",
  "no-debugger": "error",
  "no-delete-var": "error",
  "no-div-regex": "off",
  "no-dupe-args": "error",
  "no-dupe-class-members": "error",
  "no-dupe-else-if": "error",
  "no-dupe-keys": "error",
  "no-duplicate-case": "error",
  "no-duplicate-imports": "error",
  "no-else-return": ["error", { "allowElseIf": false }],
  "no-empty": "warn",
  "no-empty-character-class": "error",
  "no-empty-function": "warn",
  "no-empty-pattern": "error",
  "no-empty-static-block": "error",
  "no-eq-null": "off",
  "no-eval": "error",
  "no-ex-assign": "error",
  "no-extend-native": "error",
  "no-extra-bind": "error",
  "no-extra-boolean-cast": ["error", { "enforceForInnerExpressions": true }],
  "no-extra-label": "error",
  "no-fallthrough": ["error", { "reportUnusedFallthroughComment": true }],
  "no-func-assign": "error",
  "no-global-assign": "error",
  "no-implicit-coercion": ["error", { "disallowTemplateShorthand": true }],
  "no-implicit-globals": "error",
  "no-implied-eval": "error",
  "no-import-assign": "error",
  "no-inline-comments": "off",
  "no-inner-declarations": ["error", "both", { "blockScopedFunctions": "disallow" }],
  "no-invalid-regexp": "error",
  "no-invalid-this": "error",
  "no-irregular-whitespace": ["error", { "skipStrings": false }],
  "no-iterator": "error",
  "no-label-var": "error",
  "no-labels": ["error", { "allowLoop": true }],
  "no-lone-blocks": "error",
  "no-lonely-if": "error",
  "no-loop-func": "error",
  "no-loss-of-precision": "error",
  "no-magic-numbers": "off",
  "no-misleading-character-class": "error",
  "no-multi-assign": "error",
  "no-multi-str": "error",
  "no-negated-condition": "off",
  "no-nested-ternary": "off",
  "no-new": "error",
  "no-new-func": "error",
  "no-new-native-nonconstructor": "error",
  "no-new-wrappers": "error",
  "no-nonoctal-decimal-escape": "error",
  "no-obj-calls": "error",
  "no-object-constructor": "error",
  "no-octal": "error",
  "no-octal-escape": "error",
  "no-param-reassign": "error",
  "no-plusplus": ["error", { "allowForLoopAfterthoughts": true }],
  "no-promise-executor-return": "error",
  "no-proto": "error",
  "no-prototype-builtins": "error",
  "no-redeclare": "error",
  "no-regex-spaces": "error",
  "no-restricted-exports": "off",
  "no-restricted-globals": "off",
  "no-restricted-imports": "off",
  "no-restricted-properties": "off",
  "no-restricted-syntax": "off",
  "no-return-assign": ["error", "always"],
  "no-script-url": "error",
  "no-self-assign": "error",
  "no-self-compare": "error",
  "no-sequences": ["error", { "allowInParentheses": false }],
  "no-setter-return": "error",
  "no-shadow": ["error", {
    "builtinGlobals": true,
    "hoist": "all",
    "allow": ["Image"],
  }],
  "no-shadow-restricted-names": "error",
  "no-sparse-arrays": "error",
  "no-template-curly-in-string": "warn",
  "no-ternary": "off",
  "no-this-before-super": "error",
  "no-throw-literal": "error",
  "no-undef": "off",
  "no-undef-init": "error",
  "no-undefined": "off",
  "no-underscore-dangle": "off",
  "no-unexpected-multiline": "error",
  "no-unmodified-loop-condition": "error",
  "no-unneeded-ternary": ["error", { "defaultAssignment": false }],
  "no-unreachable": "error",
  "no-unreachable-loop": "error",
  "no-unsafe-finally": "error",
  "no-unsafe-negation": ["error", { "enforceForOrderingRelations": true }],
  "no-unsafe-optional-chaining": ["error", { "disallowArithmeticOperators": true }],
  "no-unused-expressions": "error",
  "no-unused-labels": "error",
  "no-unused-private-class-members": "error",
  "no-unused-vars": "off",
  "no-use-before-define": "off",
  "no-useless-assignment": "error",
  "no-useless-backreference": "error",
  "no-useless-call": "error",
  "no-useless-catch": "error",
  "no-useless-computed-key": "error",
  "no-useless-concat": "error",
  "no-useless-constructor": "error",
  "no-useless-escape": "error",
  "no-useless-rename": "error",
  "no-useless-return": "error",
  "no-var": "error",
  "no-void": "error",
  "no-warning-comments": ["warn", { "location": "anywhere" }],
  "no-with": "error",
  "object-shorthand": "error",
  "one-var": ["error", "never"],
  "operator-assignment": "error",
  "prefer-arrow-callback": ["error", { "allowUnboundThis": false }],
  "prefer-const": "error",
  "prefer-destructuring": "off",
  "prefer-exponentiation-operator": "error",
  "prefer-named-capture-group": "off",
  "prefer-numeric-literals": "error",
  "prefer-object-has-own": "error",
  "prefer-object-spread": "error",
  "prefer-promise-reject-errors": "error",
  "prefer-regex-literals": ["error", { "disallowRedundantWrapping": true }],
  "prefer-rest-params": "error",
  "prefer-spread": "error",
  "prefer-template": "error",
  "radix": "error",
  "require-atomic-updates": "error",
  "require-await": "error",
  "require-unicode-regexp": "off",
  "require-yield": "error",
  "sort-imports": "off",
  "sort-keys": "off",
  "sort-vars": "off",
  "strict": ["error", "never"],
  "symbol-description": "error",
  "unicode-bom": "error",
  "use-isnan": ["error", { "enforceForIndexOf": true }],
  "valid-typeof": ["error", { "requireStringLiterals": true }],
  "vars-on-top": "error",
  "yoda": "error",
};

const tsRules = {
  "@typescript-eslint/no-unused-vars": ["error", {
    "args": "all",
    "reportUsedIgnorePattern": true,
    "varsIgnorePattern": "^_",
    "argsIgnorePattern": "^_",
    "caughtErrorsIgnorePattern": "^_",
  }],
  "@typescript-eslint/no-use-before-define": ["error", { "functions": false }],
};

const styleRules = {
  "@stylistic/array-bracket-newline": "error",
  "@stylistic/array-bracket-spacing": "error",
  "@stylistic/array-element-newline": ["error", { "consistent": true, "multiline": true }],
  "@stylistic/arrow-parens": "error",
  "@stylistic/arrow-spacing": "error",
  "@stylistic/block-spacing": "error",
  "@stylistic/brace-style": "error",
  "@stylistic/comma-dangle": ["error", "always-multiline"],
  "@stylistic/comma-spacing": "error",
  "@stylistic/comma-style": "error",
  "@stylistic/computed-property-spacing": "error",
  "@stylistic/curly-newline": ["error", "always"],
  "@stylistic/dot-location": ["error", "property"],
  "@stylistic/eol-last": "error",
  "@stylistic/function-call-argument-newline": ["error", "consistent"],
  "@stylistic/function-call-spacing": "error",
  "@stylistic/function-paren-newline": "error",
  "@stylistic/generator-star-spacing": "error",
  "@stylistic/implicit-arrow-linebreak": "off",
  "@stylistic/indent": ["error", 2],
  "@stylistic/indent-binary-ops": ["error", 2],
  "@stylistic/jsx-child-element-spacing": "error",
  "@stylistic/jsx-closing-bracket-location": ["error", "line-aligned"],
  "@stylistic/jsx-closing-tag-location": ["error", "line-aligned"],
  "@stylistic/jsx-curly-brace-presence": ["error", {
    "props": "never",
    "children": "never",
    "propElementValues": "always",
  }],
  "@stylistic/jsx-curly-newline": "error",
  "@stylistic/jsx-curly-spacing": ["error", {
    "when": "never",
    "children": true,
    "allowMultiline": false,
  }],
  "@stylistic/jsx-equals-spacing": "error",
  "@stylistic/jsx-first-prop-new-line": "error",
  "@stylistic/jsx-function-call-newline": "error",
  "@stylistic/jsx-max-props-per-line": "off",
  "@stylistic/jsx-newline": "off",
  "@stylistic/jsx-one-expression-per-line": "off",
  "@stylistic/jsx-pascal-case": ["error", { "allowNamespace": true }],
  "@stylistic/jsx-props-no-multi-spaces": "error",
  "@stylistic/jsx-quotes": "error",
  "@stylistic/jsx-self-closing-comp": "error",
  "@stylistic/jsx-sort-props": "off",
  "@stylistic/jsx-tag-spacing": ["error", { "beforeClosing": "never" }],
  "@stylistic/jsx-wrap-multilines": "error",
  "@stylistic/key-spacing": "error",
  "@stylistic/keyword-spacing": "error",
  "@stylistic/line-comment-position": "off",
  "@stylistic/linebreak-style": "error",
  "@stylistic/lines-around-comment": "off",
  "@stylistic/lines-between-class-members": "off",
  "@stylistic/max-len": "off",
  "@stylistic/max-statements-per-line": "error",
  "@stylistic/member-delimiter-style": "error",
  "@stylistic/multiline-comment-style": "off",
  "@stylistic/multiline-ternary": ["error", "always-multiline"],
  "@stylistic/new-parens": "error",
  "@stylistic/newline-per-chained-call": "off",
  "@stylistic/no-confusing-arrow": "error",
  "@stylistic/no-extra-parens": "off",
  "@stylistic/no-extra-semi": "error",
  "@stylistic/no-floating-decimal": "error",
  "@stylistic/no-mixed-operators": "error",
  "@stylistic/no-mixed-spaces-and-tabs": "error",
  "@stylistic/no-multi-spaces": ["error", { "ignoreEOLComments": true }],
  "@stylistic/no-multiple-empty-lines": ["error", { "max": 2, "maxBOF": 0, "maxEOF": 0 }],
  "@stylistic/no-tabs": "error",
  "@stylistic/no-trailing-spaces": "error",
  "@stylistic/no-whitespace-before-property": "error",
  "@stylistic/nonblock-statement-body-position": "off",
  "@stylistic/object-curly-newline": ["error", { "consistent": true, "multiline": true }],
  "@stylistic/object-curly-spacing": ["error", "always"],
  "@stylistic/object-property-newline": "off",
  "@stylistic/one-var-declaration-per-line": "off",
  "@stylistic/operator-linebreak": "error",
  "@stylistic/padded-blocks": ["error", "never"],
  "@stylistic/padding-line-between-statements": "off",
  "@stylistic/quote-props": ["error", "consistent-as-needed", { "keywords": true }],
  "@stylistic/quotes": ["error", "double", {
    "avoidEscape": true,
    "allowTemplateLiterals": "avoidEscape",
  }],
  "@stylistic/rest-spread-spacing": "error",
  "@stylistic/semi": "error",
  "@stylistic/semi-spacing": "error",
  "@stylistic/semi-style": "error",
  "@stylistic/space-before-blocks": "error",
  "@stylistic/space-before-function-paren": ["error", {
    "anonymous": "never",
    "named": "never",
    "asyncArrow": "always",
  }],
  "@stylistic/space-in-parens": "error",
  "@stylistic/space-infix-ops": ["error", { "int32Hint": true }],
  "@stylistic/space-unary-ops": "error",
  "@stylistic/spaced-comment": ["error", "always", { "block": { "balanced": true } }],
  "@stylistic/switch-colon-spacing": "error",
  "@stylistic/template-curly-spacing": "error",
  "@stylistic/template-tag-spacing": "error",
  "@stylistic/type-annotation-spacing": "error",
  "@stylistic/type-generic-spacing": "error",
  "@stylistic/type-named-tuple-spacing": "error",
  "@stylistic/wrap-iife": ["error", "inside", { "functionPrototypeMethods": true }],
  "@stylistic/wrap-regex": "off",
  "@stylistic/yield-star-spacing": "error",
};

export default [
  {
    plugins: {
      "@typescript-eslint": ts.plugin,
      "@stylistic": style,
    },
    rules: {
      ...styleRules,
      ...tsRules,
      ...jsRules,
    },
    languageOptions: {
      globals: {
        ...globals.browser,
      },
    },
  },
  { files: ["src/**/*.js", "src/**/*.jsx"] },
  {
    files: ["src/**/*.ts", "src/**/*.tsx"],
    ignores: ["src/**/*.d.ts"],
    languageOptions: { parser: ts.parser },
  },
];
